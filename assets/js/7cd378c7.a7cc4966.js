"use strict";(self.webpackChunkserenity_users_guide=self.webpackChunkserenity_users_guide||[]).push([[9562],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,f=d["".concat(l,".").concat(m)]||d[m]||s[m]||a;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:i,o[1]=u;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1759:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>u,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:6},o="How to Do Parallel Test Execution in Cucumber with Serenity",u={unversionedId:"tutorials/running_cucumber_scenarios_in_parallel",id:"tutorials/running_cucumber_scenarios_in_parallel",isDocsHomePage:!1,title:"How to Do Parallel Test Execution in Cucumber with Serenity",description:"Cucumber 7 has introduced native support for parallel execution at both the feature and scenario levels. This parallel execution can provide significant performance improvements in test runs. If you want to harness these performance improvements and run your Serenity BDD features and scenarios in parallel, you will need to upgrade to JUnit 5.",source:"@site/docs/tutorials/running_cucumber_scenarios_in_parallel.md",sourceDirName:"tutorials",slug:"/tutorials/running_cucumber_scenarios_in_parallel",permalink:"/docs/tutorials/running_cucumber_scenarios_in_parallel",editUrl:"https://github.com/serenity-bdd/serenity-bdd.github.io/blob/master/docs/tutorials/running_cucumber_scenarios_in_parallel.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Migrating From Serenity BDD 3.x to Serenity BDD 4.x",permalink:"/docs/tutorials/migrating_to_serenity_4"},next:{title:"Three Strategies to Optimize Your Serenity BDD Reports",permalink:"/docs/tutorials/streamlining_your_serenity_reports"}},l=[{value:"Pre-requisites",id:"pre-requisites",children:[]},{value:"Step 1: Update Serenity BDD to a Recent Version",id:"step-1-update-serenity-bdd-to-a-recent-version",children:[]},{value:"Step 2: Update to JUnit 5 in Your Maven Project",id:"step-2-update-to-junit-5-in-your-maven-project",children:[]},{value:"Step 3: Create a <code>junit-platform.properties</code> File",id:"step-3-create-a-junit-platformproperties-file",children:[]},{value:"Step 4: Create a <code>cucumber.properties</code> File",id:"step-4-create-a-cucumberproperties-file",children:[]},{value:"Step 5: Update Your Cucumber Runner Class",id:"step-5-update-your-cucumber-runner-class",children:[]},{value:"Conclusion",id:"conclusion",children:[]}],p={toc:l};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"how-to-do-parallel-test-execution-in-cucumber-with-serenity"},"How to Do Parallel Test Execution in Cucumber with Serenity"),(0,i.kt)("p",null,"Cucumber 7 has introduced native support for parallel execution at both the feature and scenario levels. This parallel execution can provide significant performance improvements in test runs. If you want to harness these performance improvements and run your Serenity BDD features and scenarios in parallel, you will need to upgrade to JUnit 5."),(0,i.kt)("h2",{id:"pre-requisites"},"Pre-requisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Cucumber 7.x")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Serenity BDD 3.9.8 or 4.0.x")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Maven 3.x")," for building the project")),(0,i.kt)("p",null,"Now, let's get started with the detailed step-by-step guide."),(0,i.kt)("h2",{id:"step-1-update-serenity-bdd-to-a-recent-version"},"Step 1: Update Serenity BDD to a Recent Version"),(0,i.kt)("p",null,"Before proceeding, make sure that you have a recent version of Serenity BDD. Versions 3.9.8 or 4.0.x are recommended for best results."),(0,i.kt)("p",null,"You can check your current version in your ",(0,i.kt)("inlineCode",{parentName:"p"},"pom.xml")," file or update it to the latest version."),(0,i.kt)("h2",{id:"step-2-update-to-junit-5-in-your-maven-project"},"Step 2: Update to JUnit 5 in Your Maven Project"),(0,i.kt)("p",null,"JUnit 5 provides the foundation for running tests in parallel with Cucumber and Serenity. Here's how you can update to JUnit 5 in your ",(0,i.kt)("inlineCode",{parentName:"p"},"pom.xml")," file:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open the ",(0,i.kt)("inlineCode",{parentName:"p"},"pom.xml")," file in your Maven project.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add the following dependencies for JUnit 5 and Cucumber 7."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.junit</groupId>\n            <artifactId>junit-bom</artifactId>\n            <version>5.10.0</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n<dependencies>\n    ...\n    \x3c!-- JUNIT 5 Dependencies --\x3e\n    <dependency>\n        <groupId>org.junit.platform</groupId>\n        <artifactId>junit-platform-launcher</artifactId>\n        <scope>test</scope>\n    </dependency>\n    <dependency>\n        <groupId>org.junit.platform</groupId>\n        <artifactId>junit-platform-suite</artifactId>\n        <scope>test</scope>\n    </dependency>\n    <dependency>\n        <groupId>org.junit.jupiter</groupId>\n        <artifactId>junit-jupiter-engine</artifactId>\n        <scope>test</scope>\n    </dependency>\n    <dependency>\n        <groupId>io.cucumber</groupId>\n        <artifactId>cucumber-junit-platform-engine</artifactId>\n        <version>7.2.3</version>\n        <scope>test</scope>\n    </dependency>\n</dependencies>\n")))),(0,i.kt)("p",null,"More details on JUnit 5 and Maven can be found in the ",(0,i.kt)("a",{parentName:"p",href:"https://junit.org/junit5/docs/current/user-guide/#running-tests-build-maven"},"JUnit 5 User Guide"),"."),(0,i.kt)("h2",{id:"step-3-create-a-junit-platformproperties-file"},"Step 3: Create a ",(0,i.kt)("inlineCode",{parentName:"h2"},"junit-platform.properties")," File"),(0,i.kt)("p",null,"Create a new file named ",(0,i.kt)("inlineCode",{parentName:"p"},"junit-platform.properties")," in your ",(0,i.kt)("inlineCode",{parentName:"p"},"src/test/resources")," folder. This file enables and configures parallel execution."),(0,i.kt)("p",null,"Add the following content to the file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-properties"},"cucumber.execution.parallel.enabled=true\ncucumber.execution.parallel.config.strategy=dynamic\ncucumber.plugin=io.cucumber.core.plugin.SerenityReporterParallel\n")),(0,i.kt)("p",null,"These properties enable parallel execution and configure it to use a dynamic strategy, along with the Serenity reporter for parallel execution."),(0,i.kt)("h2",{id:"step-4-create-a-cucumberproperties-file"},"Step 4: Create a ",(0,i.kt)("inlineCode",{parentName:"h2"},"cucumber.properties")," File"),(0,i.kt)("p",null,"Create a new file named ",(0,i.kt)("inlineCode",{parentName:"p"},"cucumber.properties")," in your ",(0,i.kt)("inlineCode",{parentName:"p"},"src/test/resources")," folder. This file will contain the Cucumber options for your Cucumber tests."),(0,i.kt)("p",null,"Add the following content to the file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-properties"},"cucumber.execution.order = random\ncucumber.plugin=pretty,json:target/cucumber.json,timeline:target/test-results/timeline\ncucumber.snippet-type=camelcase\n")),(0,i.kt)("p",null,"You can find more details on Cucumber configuration options in the ",(0,i.kt)("a",{parentName:"p",href:"https://cucumber.io/docs/cucumber/api/?lang=java#list-configuration-options"},"Cucumber documentation"),"."),(0,i.kt)("h2",{id:"step-5-update-your-cucumber-runner-class"},"Step 5: Update Your Cucumber Runner Class"),(0,i.kt)("p",null,"You should have a single runner class for your whole test suite. Update it as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'import org.junit.platform.suite.api.IncludeEngines;\nimport org.junit.platform.suite.api.SelectClasspathResource;\nimport org.junit.platform.suite.api.Suite;\n\n@Suite\n@IncludeEngines("cucumber")\n@SelectClasspathResource("/features")\npublic class AcceptanceTestSuite {}\n')),(0,i.kt)("p",null,"This runner class will include all the features in the ",(0,i.kt)("inlineCode",{parentName:"p"},"/features")," directory and run them using the Cucumber engine."),(0,i.kt)("h2",{id:"conclusion"},"Conclusion"),(0,i.kt)("p",null,"That's it! By following these steps, you can leverage the power of parallel execution with Cucumber and Serenity BDD. This will significantly reduce the execution time of your test suite, leading to faster feedback and more efficient development cycles."),(0,i.kt)("p",null,"Happy testing! \ud83d\ude80"))}c.isMDXComponent=!0}}]);